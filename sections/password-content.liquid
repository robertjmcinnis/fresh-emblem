<video autoplay loop muted poster="{{section.settings.image|img_url:'master'}}" id="background" style="background-image:url({{section.settings.image|img_url:'master'}})">
  <source src="{{section.settings.video}}" type="video/mp4">
</video>

<div class="main">
  <div id='content'>
    <div class="table-cell">
      <a href="/" style="text-decoration: none;">{{section.settings.title|html}}</a>
      <section>
        <ul id="countdown">
          <li><span class="days timenumbers">01</span>
            <p class="timeRefDays timedescription">days</p>
          </li>
          <li><span class="hours timenumbers">00</span>
            <p class="timeRefHours timedescription">hours</p>
          </li>
          <li><span class="minutes timenumbers">00</span>
            <p class="timeRefMinutes timedescription">minutes</p>
          </li>
          <li><span class="seconds timenumbers yellow-text">00</span>
            <p class="timeRefSeconds timedescription">seconds</p>
          </li>
        </ul>
      </section><br/>
      <div class="notify">
      {% if section.settings.newsletter_enable %}
      {% form 'customer' %}
      {% if form.posted_successfully? %}
      <ul class="form--success">
        <li>{{ 'general.password_page.signup_form_success' | t }}</li>
      </ul>
      {% else %}
      <p style="letter-spacing: 5px;">
        {{ section.settings.newsletter_form_heading }}
      </p>
      <input type="hidden" name="contact[tags]" value="prospect, password page"><br/>
      <div class="input-group password__input-group">
        <input type="email" name="contact[email]" id="Email" class="input-group__field" placeholder="{{ section.settings.newsletter_placeholder }}" required>
        <span class="input-group__btn">
          <button type="submit" name="commit" class="btn">
            <span>{{ section.settings.newsletter_button_text }}</span>
          </button>
        </span>
      </div>
      {% endif %}
      {{ form.errors | default_errors }}
      {% endform %}
      {% endif %}
      </div>
      <div id="LoginModal" class="modal">
        <div class="modal__inner">
          <div class="modal__centered password-modal__content page-width text-center">
            <p class="password__form-heading h4">{{ 'general.password_page.login_form_heading' | t }}</p><br/>
            {% form 'storefront_password' %}
            <div class="input-group password__input-group">
              <input type="password" name="password" id="Password" class="input-group__field input--content-color" placeholder="{{ 'general.password_page.login_form_password_placeholder' | t }}">
              <span class="input-group__btn">
                <button type="submit" name="commit" class="btn btn--narrow">
                  {{ 'general.password_page.login_form_submit' | t }}
                </button>
              </span>
            </div>
            {{ form.errors | default_errors }}
            {% endform %}
            <p>{{ 'general.password_page.admin_link_html' | t }}</p>
          </div>
        </div>
        <button type="button" class="modal__close js-modal-close text-link">
          <i class="fa fa-close" aria-hidden="true"></i>
          <span class="icon__fallback-text">{{ 'general.accessibility.close_modal' | t }}</span>
        </button>
      </div>
      <div class="password-header__inner">
        <div class="password-login">
          <a href="#LoginModal" class="js-modal-open-login-modal">
            {{ 'general.password_page.password_link' | t }} &rarr;
          </a>
        </div>
      </div>
    </div>
  </div>
</div>
<script type="text/javascript">
  (function($) {
    $.fn.countdown = function(options, callback) {
      //custom 'this' selector
      thisEl = $(this); 

      // array of custom settings
      var settings = { 
        'date': null,
        'format': null
      };

      // append the settings array to options
      if(options) {
        $.extend(settings, options);
      }

      //create the countdown processing function
      function countdown_proc() {
        var eventDate = Date.parse(settings.date) / 1000;
        var currentDate = Math.floor($.now() / 1000);

        if(eventDate <= currentDate) {
          callback.call(this);
        }

        var seconds = eventDate - currentDate;

        var days = Math.floor(seconds / (60 * 60 * 24)); 
        //calculate the number of days

        seconds -= days * 60 * 60 * 24; 
        //update the seconds variable with number of days removed

        var hours = Math.floor(seconds / (60 * 60));
        seconds -= hours * 60 * 60; 
        //update the seconds variable with number of hours removed

        var minutes = Math.floor(seconds / 60);
        seconds -= minutes * 60; 
        //update the seconds variable with number of minutes removed

        //conditional statements
        if (days == 1) { thisEl.find(".timeRefDays").text("day"); } else { thisEl.find(".timeRefDays").text("days"); }
        if (hours == 1) { thisEl.find(".timeRefHours").text("hour"); } else { thisEl.find(".timeRefHours").text("hours"); }
        if (minutes == 1) { thisEl.find(".timeRefMinutes").text("minute"); } else { thisEl.find(".timeRefMinutes").text("minutes"); }
        if (seconds == 1) { thisEl.find(".timeRefSeconds").text("second"); } else { thisEl.find(".timeRefSeconds").text("seconds"); }

        //logic for the two_digits ON setting
        if(settings.format == "on") {
          days = (String(days).length >= 2) ? days : "0" + days;
          hours = (String(hours).length >= 2) ? hours : "0" + hours;
          minutes = (String(minutes).length >= 2) ? minutes : "0" + minutes;
          seconds = (String(seconds).length >= 2) ? seconds : "0" + seconds;
        }

        //update the countdown's html values.
        thisEl.find(".days").text(days);
        thisEl.find(".hours").text(hours);
        thisEl.find(".minutes").text(minutes);
        thisEl.find(".seconds").text(seconds);
      }

      //run the function
      countdown_proc();

      //loop the function
      interval = setInterval(countdown_proc, 1000);
    };

  }) (jQuery);



  //Provide the plugin settings
  $("#countdown").countdown({
    //The countdown end date
    date: {{section.settings.countdown|json}},

    // on (03:07:52) | off (3:7:52) - two_digits set to ON maintains layout consistency
    format: "on"
  }, 

  function() {
    // This will run when the countdown ends
//     alert("We're Out Now");
  });


  function setHeights() {
    var windowHeight = $(window).height();
    $('.slide').height(windowHeight);
  }

  setHeights();

  $(window).resize(function() {
    setHeights();
  });

  function addSticky() {
    $('.slide').each(function() {
      var scrollerAnchor = $(this).offset().top;
      if (window.scrollY >= scrollerAnchor) {
        $(this).addClass('fix-it');
      } else {
        $(this).removeClass('fix-it');
      }
    });
  }

  $(window).scroll(function() {
    addSticky();
  });  
</script>
{% schema %}
{
  "name": "Content",
  "settings": [
    {
      "type": "header",
      "content": "== Title settings"
    },
    {
      "type": "textarea",
      "id": "title",
      "label": "Title",
      "default": "<div class=\'title\'><span>BOUTIQUE + </span></div><p>coming soon</p>"
    },
    {
      "type": "textarea",
      "id": "countdown",
      "label": "Time countdown",
      "default": "1 December 2018 12:00:00",
      "info": "1 December 2018 12:00:00"
    },
    {
      "type": "checkbox",
      "id": "newsletter_enable",
      "label": "Show newsletter signup",
      "default": true
    },
    {
      "type": "text",
      "id": "newsletter_form_heading",
      "label": "Newsletter form heading",
      "default": "Be the first to know when we launch.",
      "info": "[Tell your visitors about a launch day discount](https://www.shopify.ca/blog/15514000-14-ways-to-use-offers-coupons-discounts-and-deals-to-drive-revenue-and-customer-loyalty)."
    },
    {
      "type": "text",
      "id": "newsletter_placeholder",
      "label": "Newsletter label text",
      "default": "Email address"
    },
    {
      "type": "text",
      "id": "newsletter_button_text",
      "label": "Newsletter button text",
      "default": "Notify me"
    },
    {
      "type": "header",
      "content": "== Background settings"
    },
    {
      "type": "image_picker",
      "id": "image",
      "label": "Image background"
    },
    {
      "type": "text",
      "id": "video",
      "label": "Video background",
      "default": "https://teathemes.net/mazano/password.mp4"
    }
  ]
}

{% endschema %}
